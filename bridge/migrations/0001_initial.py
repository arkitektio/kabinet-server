# Generated by Django 4.2.9 on 2024-01-17 16:19

import bridge.storages
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="App",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.CharField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name="Flavour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=400)),
                (
                    "deployment_id",
                    models.CharField(default=uuid.uuid4, max_length=400, unique=True),
                ),
                ("build_id", models.CharField(default=uuid.uuid4, max_length=400)),
                ("flavour", models.CharField(default="vanilla", max_length=400)),
                ("selectors", models.JSONField(default=list)),
                (
                    "image",
                    models.CharField(default="jhnnsrs/fake:latest", max_length=400),
                ),
                ("builder", models.CharField(max_length=400)),
                ("definitions", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("deployed_at", models.DateTimeField(null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Repo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=400)),
                ("created_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GithubRepo",
            fields=[
                (
                    "repo_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="bridge.repo",
                    ),
                ),
                ("repo", models.CharField(max_length=4000)),
                ("user", models.CharField(max_length=4000)),
                ("branch", models.CharField(max_length=4000)),
            ],
            bases=("bridge.repo",),
        ),
        migrations.CreateModel(
            name="Whale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=1000)),
                ("client_id", models.CharField(max_length=1000)),
                ("token", models.CharField(max_length=10000, null=True)),
                ("created_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "flavour",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whales",
                        to="bridge.flavour",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(max_length=400)),
                ("scopes", models.JSONField(default=list)),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        storage=bridge.storages.PrivateMediaStorage(),
                        upload_to="",
                    ),
                ),
                (
                    "original_logo",
                    models.CharField(
                        blank=True,
                        help_text="The original logo url",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("entrypoint", models.CharField(default="app", max_length=4000)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="releases",
                        to="bridge.app",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="flavour",
            name="release",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="flavours",
                to="bridge.release",
            ),
        ),
        migrations.AddField(
            model_name="flavour",
            name="repo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deployments",
                to="bridge.repo",
            ),
        ),
        migrations.AddConstraint(
            model_name="release",
            constraint=models.UniqueConstraint(
                fields=("app", "version"), name="Unique release for version"
            ),
        ),
        migrations.AddConstraint(
            model_name="flavour",
            constraint=models.UniqueConstraint(
                fields=("release", "name"), name="Unique flavour for release"
            ),
        ),
    ]
